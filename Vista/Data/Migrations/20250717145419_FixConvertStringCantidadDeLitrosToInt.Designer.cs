// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vista.Data;

#nullable disable

namespace Vista.Data.Migrations
{
    [DbContext(typeof(BomberosDbContext))]
    [Migration("20250717145419_FixConvertStringCantidadDeLitrosToInt")]
    partial class FixConvertStringCantidadDeLitrosToInt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Vista.Data.Models.Grupos.Brigadas.Bombero_Brigada", b =>
                {
                    b.Property<int?>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int?>("BrigadaId")
                        .HasColumnType("int");

                    b.HasKey("PersonaId", "BrigadaId");

                    b.HasIndex("BrigadaId");

                    b.ToTable("bombero_brigada");
                });

            modelBuilder.Entity("Vista.Data.Models.Grupos.Brigadas.Brigada", b =>
                {
                    b.Property<int>("BrigadaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BrigadaId"));

                    b.Property<int>("EncargadoPersonaId")
                        .HasColumnType("int");

                    b.Property<string>("NombreBrigada")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("BrigadaId");

                    b.HasIndex("EncargadoPersonaId");

                    b.HasIndex("NombreBrigada")
                        .IsUnique();

                    b.ToTable("Brigadas");
                });

            modelBuilder.Entity("Vista.Data.Models.Grupos.Dependencias.Bombero_Dependencia", b =>
                {
                    b.Property<int?>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int?>("DependenciaId")
                        .HasColumnType("int");

                    b.HasKey("PersonaId", "DependenciaId");

                    b.HasIndex("DependenciaId");

                    b.ToTable("bombero_dependencia");
                });

            modelBuilder.Entity("Vista.Data.Models.Grupos.Dependencias.Comunicaciones.Comunicacion", b =>
                {
                    b.Property<int>("ComunicacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ComunicacionId"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .HasColumnType("longtext");

                    b.Property<string>("NroEquipo")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NroSerie")
                        .HasColumnType("longtext");

                    b.HasKey("ComunicacionId");

                    b.HasIndex("NroEquipo")
                        .IsUnique();

                    b.ToTable("Comunicacion");
                });

            modelBuilder.Entity("Vista.Data.Models.Grupos.Dependencias.Dependencia", b =>
                {
                    b.Property<int>("DependenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DependenciaId"));

                    b.Property<int>("EncargadoPersonaId")
                        .HasColumnType("int");

                    b.Property<string>("NombreDependencia")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("DependenciaId");

                    b.HasIndex("EncargadoPersonaId");

                    b.ToTable("Dependencias");
                });

            modelBuilder.Entity("Vista.Data.Models.Grupos.FuerzasIntervinientes.FuerzaInterviniente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombreFuerza")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Fuerzas");
                });

            modelBuilder.Entity("Vista.Data.Models.Grupos.FuerzasIntervinientes.Salida_FuerzaInterviniente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Damnificado_SalidaId")
                        .HasColumnType("int");

                    b.Property<string>("Destino")
                        .HasColumnType("longtext");

                    b.Property<string>("Encargado")
                        .HasColumnType("longtext");

                    b.Property<int>("FuerzaId")
                        .HasColumnType("int");

                    b.Property<int>("SalidaId")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Damnificado_SalidaId");

                    b.HasIndex("FuerzaId");

                    b.HasIndex("SalidaId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("fuerzaIntervinientes");
                });

            modelBuilder.Entity("Vista.Data.Models.Imagenes.Imagen", b =>
                {
                    b.Property<int>("ImagenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ImagenId"));

                    b.Property<byte[]>("DatosImagen")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("NombreImagen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("TipoImagen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ImagenId");

                    b.ToTable("Imagen");

                    b.HasDiscriminator<int>("Tipo");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Vista.Data.Models.Objetos.Componentes.MovimientoMaterial", b =>
                {
                    b.Property<int>("MovimientoMaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MovimientoMaterialId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("DestinoBomberoPersonaId")
                        .HasColumnType("int");

                    b.Property<int?>("DestinoMovilVehiculoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("MaterialesMaterialId")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.Property<string>("TipoMovimiento")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("MovimientoMaterialId");

                    b.HasIndex("DestinoBomberoPersonaId");

                    b.HasIndex("DestinoMovilVehiculoId");

                    b.HasIndex("MaterialesMaterialId");

                    b.ToTable("Movimientos");
                });

            modelBuilder.Entity("Vista.Data.Models.Objetos.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MaterialId"));

                    b.Property<string>("Codigo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Rubro")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("MaterialId");

                    b.ToTable("Materiales");
                });

            modelBuilder.Entity("Vista.Data.Models.Otros.Incidente", b =>
                {
                    b.Property<int>("IncidenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IncidenteId"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("varchar(21)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("IncidenteId");

                    b.HasIndex("PersonaId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Incidente");

                    b.HasDiscriminator().HasValue("Incidente");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Vista.Data.Models.Otros.NovedadBase", b =>
                {
                    b.Property<int>("NovedadBaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("NovedadBaseId"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("varchar(21)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Observacion")
                        .HasColumnType("longtext");

                    b.Property<int?>("PersonalId")
                        .HasColumnType("int");

                    b.HasKey("NovedadBaseId");

                    b.HasIndex("PersonalId");

                    b.ToTable("NovedadBase");

                    b.HasDiscriminator().HasValue("NovedadBase");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Vista.Data.Models.Personas.Damnificado_Salida", b =>
                {
                    b.Property<int>("Damnificado_SalidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Damnificado_SalidaId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Documento")
                        .HasColumnType("int");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("LugarNacimiento")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SalidaId")
                        .HasColumnType("int");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Damnificado_SalidaId");

                    b.HasIndex("SalidaId");

                    b.ToTable("Damnificados");
                });

            modelBuilder.Entity("Vista.Data.Models.Personas.Persona", b =>
                {
                    b.Property<int>("PersonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PersonaId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Documento")
                        .HasColumnType("int");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Residencia")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("PersonaId");

                    b.ToTable("Persona");

                    b.HasDiscriminator<int>("Tipo");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Vista.Data.Models.Personas.Personal.Componentes.AscensoBombero", b =>
                {
                    b.Property<int>("AscensoBomberoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AscensoBomberoId"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly>("FechaAscenso")
                        .HasColumnType("date");

                    b.Property<string>("GradoAntiguo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("GradoAscenso")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("NumeroActa")
                        .HasColumnType("int");

                    b.Property<int>("NumeroLibero")
                        .HasColumnType("int");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("AscensoBomberoId");

                    b.HasIndex("PersonaId");

                    b.ToTable("AscensoBomberos");
                });

            modelBuilder.Entity("Vista.Data.Models.Personas.Personal.Componentes.Contacto", b =>
                {
                    b.Property<int>("ContactoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ContactoId"));

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PersonalId")
                        .HasColumnType("int");

                    b.Property<string>("TelefonoCel")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TelefonoFijo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TelefonoLaboral")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ContactoId");

                    b.HasIndex("PersonalId")
                        .IsUnique();

                    b.ToTable("Contactos");
                });

            modelBuilder.Entity("Vista.Data.Models.Personas.Personal.Componentes.Firma", b =>
                {
                    b.Property<int>("FirmaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("FirmaId"));

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("EmbarcacionVehiculoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("FirmaId");

                    b.HasIndex("EmbarcacionVehiculoId");

                    b.HasIndex("PersonaId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Firmas");
                });

            modelBuilder.Entity("Vista.Data.Models.Personas.Personal.Componentes.Licencia", b =>
                {
                    b.Property<int>("LicenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LicenciaId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Desde")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EstadoLicencia")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Hasta")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PersonalId")
                        .HasColumnType("int");

                    b.Property<string>("TipoLicencia")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("LicenciaId");

                    b.HasIndex("PersonalId");

                    b.ToTable("Licencias");
                });

            modelBuilder.Entity("Vista.Data.Models.Personas.Personal.Componentes.Sancion", b =>
                {
                    b.Property<int>("SancionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SancionId"));

                    b.Property<string>("DescripcionSancion")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("FechaDesde")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaHasta")
                        .HasColumnType("date");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<string>("SacionArea")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TipoSancion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("SancionId");

                    b.HasIndex("PersonaId");

                    b.ToTable("Sanciones");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.BomberoSalida", b =>
                {
                    b.Property<int>("BomberoSalidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BomberoSalidaId"));

                    b.Property<string>("Grado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("MovilId")
                        .HasColumnType("int");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int>("SalidaId")
                        .HasColumnType("int");

                    b.HasKey("BomberoSalidaId");

                    b.HasIndex("MovilId");

                    b.HasIndex("PersonaId");

                    b.HasIndex("SalidaId");

                    b.ToTable("BomberosSalida");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.Movil_Salida", b =>
                {
                    b.Property<int>("Movil_SalidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Movil_SalidaId"));

                    b.Property<string>("CantidadLitros")
                        .HasColumnType("longtext");

                    b.Property<bool>("CargoCombustible")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DotacionSalida")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("FechaFactura")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("KmLlegada")
                        .HasColumnType("int");

                    b.Property<int>("MovilId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroFactura")
                        .HasColumnType("longtext");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<string>("QuienLleno")
                        .HasColumnType("longtext");

                    b.Property<int>("SalidaId")
                        .HasColumnType("int");

                    b.Property<string>("TelefonoQuienLleno")
                        .HasColumnType("longtext");

                    b.Property<string>("TipoConbustible")
                        .HasColumnType("longtext");

                    b.HasKey("Movil_SalidaId");

                    b.HasIndex("MovilId");

                    b.HasIndex("PersonaId");

                    b.HasIndex("SalidaId");

                    b.ToTable("MovilesSalida");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.Seguro", b =>
                {
                    b.Property<int>("SeguroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SeguroId"));

                    b.Property<string>("CompañiaAseguradora")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("FechaDeVencimineto")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NumeroDePoliza")
                        .HasColumnType("longtext");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("SeguroId");

                    b.ToTable("Seguro");

                    b.HasDiscriminator<int>("Tipo");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Salida", b =>
                {
                    b.Property<int>("SalidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SalidaId"));

                    b.Property<int>("AnioNumeroParte")
                        .HasColumnType("int");

                    b.Property<string>("ApellidoSolicitante")
                        .HasColumnType("longtext");

                    b.Property<int?>("CuartelRegion")
                        .HasColumnType("int");

                    b.Property<string>("Depto")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DniSolicitante")
                        .HasColumnType("longtext");

                    b.Property<int>("EncargadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HoraLlegada")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("HoraSalida")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Latitud")
                        .HasColumnType("double");

                    b.Property<double>("Longitud")
                        .HasColumnType("double");

                    b.Property<string>("NombreSolicitante")
                        .HasColumnType("longtext");

                    b.Property<string>("NombreYApellidoReceptor")
                        .HasColumnType("longtext");

                    b.Property<int>("NumeroParte")
                        .HasColumnType("int");

                    b.Property<string>("PisoNumero")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("QuienLlenoId")
                        .HasColumnType("int");

                    b.Property<int?>("SeguroId")
                        .HasColumnType("int");

                    b.Property<string>("TelefonoSolicitante")
                        .HasColumnType("longtext");

                    b.Property<int>("TipoEmergencia")
                        .HasColumnType("int");

                    b.Property<int>("TipoServicio")
                        .HasColumnType("int");

                    b.Property<string>("TipoZona")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("SalidaId");

                    b.HasIndex("EncargadoId");

                    b.HasIndex("QuienLlenoId");

                    b.HasIndex("SeguroId")
                        .IsUnique();

                    b.ToTable("Salidas");

                    b.HasDiscriminator<int>("TipoEmergencia");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Vista.Data.Models.Vehiculos.Flota.Componentes.Limpieza", b =>
                {
                    b.Property<int>("LimpiezaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LimpiezaId"));

                    b.Property<int?>("BomberosPersonaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Incidente")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("MovilId")
                        .HasColumnType("int");

                    b.HasKey("LimpiezaId");

                    b.HasIndex("BomberosPersonaId");

                    b.HasIndex("MovilId");

                    b.ToTable("Limpiezas");
                });

            modelBuilder.Entity("Vista.Data.Models.Vehiculos.Flota.EmbarcacionAfectada", b =>
                {
                    b.Property<int>("EmbarcacionAfectadaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EmbarcacionAfectadaId"));

                    b.Property<int>("CantidadBarcos")
                        .HasColumnType("int");

                    b.Property<int>("CantidadBotes")
                        .HasColumnType("int");

                    b.Property<int>("CantidadFragatas")
                        .HasColumnType("int");

                    b.Property<int>("CantidadLanchas")
                        .HasColumnType("int");

                    b.Property<bool>("Intervinientes")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Otro")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SalidaId")
                        .HasColumnType("int");

                    b.HasKey("EmbarcacionAfectadaId");

                    b.HasIndex("SalidaId");

                    b.ToTable("EmbarcacionesAfectadas");
                });

            modelBuilder.Entity("Vista.Data.Models.Vehiculos.Vehiculo", b =>
                {
                    b.Property<int>("VehiculoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("VehiculoId"));

                    b.Property<int?>("Año")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("longtext");

                    b.Property<int>("Discriminador")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Modelo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Patente")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("SeguroId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("VehiculoId");

                    b.HasIndex("SeguroId")
                        .IsUnique();

                    b.ToTable("Vehiculo");

                    b.HasDiscriminator<int>("Discriminador");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Vista.Data.Models.Imagenes.Imagen_Personal", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Imagenes.Imagen");

                    b.Property<int>("PersonalId")
                        .HasColumnType("int");

                    b.HasIndex("PersonalId")
                        .IsUnique();

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Vista.Data.Models.Imagenes.Imagen_VehiculoSalida", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Imagenes.Imagen");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Vista.Data.Models.Grupos.Dependencias.IncidenteDependencia", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Otros.Incidente");

                    b.Property<int>("DependenciaId")
                        .HasColumnType("int");

                    b.HasIndex("DependenciaId");

                    b.HasDiscriminator().HasValue("IncidenteDependencia");
                });

            modelBuilder.Entity("Vista.Data.Models.Otros.Novedad", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Otros.NovedadBase");

                    b.HasDiscriminator().HasValue("Novedad");
                });

            modelBuilder.Entity("Vista.Data.Models.Vehiculos.Flota.Componentes.NovedadVehiculo", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Otros.NovedadBase");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasIndex("VehiculoId");

                    b.HasDiscriminator().HasValue("NovedadVehiculo");
                });

            modelBuilder.Entity("Vista.Data.Models.Personas.Personal.Personal", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Personas.Persona");

                    b.Property<DateTime?>("FechaAceptacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GrupoSanguineo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LugarNacimiento")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NivelEstudios")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NumeroIoma")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.Property<string>("Profesion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.SeguroSalida", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Componentes.Seguro");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.SeguroVehiculo", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Componentes.Seguro");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Accidente", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Salida");

                    b.Property<string>("CondicionesClimaticas")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OtroCondicion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.ToTable("Salidas", t =>
                        {
                            t.Property("Tipo")
                                .HasColumnName("Accidente_Tipo");
                        });

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.FactorClimatico", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Salida");

                    b.Property<int>("CantidadAfectadaFactorClimatico")
                        .HasColumnType("int");

                    b.Property<string>("Evacuacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Superficie")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.ToTable("Salidas", t =>
                        {
                            t.Property("Evacuacion")
                                .HasColumnName("FactorClimatico_Evacuacion");

                            t.Property("Tipo")
                                .HasColumnName("FactorClimatico_Tipo");
                        });

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Incendios.Incendio", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Salida");

                    b.Property<int?>("CantidadAmbientes")
                        .HasColumnType("int");

                    b.Property<int?>("CantidadPisos")
                        .HasColumnType("int");

                    b.Property<string>("DetalleSuperficieAfectadaIncendio")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("DeteccionAutomaticaId")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Extintor")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Hidrante")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NombreEstablecimiento")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OtraAbertura")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OtroLugarIncendio")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OtroTecho")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("PisoAfectado")
                        .HasColumnType("int");

                    b.Property<string>("SuperficieAfectadaCausa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TipoAbertura")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TipoEvacuacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TipoSuperficieAfectada")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TipoTecho")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasDiscriminator().HasValue(15);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.MaterialPeligroso", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Salida");

                    b.Property<int>("CantidadAfectadaMaterialPeligroso")
                        .HasColumnType("int");

                    b.Property<bool>("Confinamiento")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Controlada")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Descontaminacion")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DetallesAccionesMateriales")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DetallesAccionesPersonas")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("DilucionDeVapores")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Evacuacion")
                        .HasColumnType("int");

                    b.Property<bool>("Neutralizacion")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("OtraAccionesMateriales")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("OtraAccionesPersonas")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("SinAccion")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Sustancias")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TipoSituacion")
                        .HasColumnType("int");

                    b.Property<int>("TipoSuperficie")
                        .HasColumnType("int");

                    b.Property<bool>("Trasvase")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Venteo")
                        .HasColumnType("tinyint(1)");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.RescateAnimal", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Salida");

                    b.Property<string>("LugarRescateAnimal")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OtroLugarRescate")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasDiscriminator().HasValue(5);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.RescatePersona", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Salida");

                    b.Property<string>("LugarRescatePersona")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OtroLugarRescate")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasDiscriminator().HasValue(6);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Servicios.ServicioEspecial", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Salida");

                    b.Property<string>("TipoOrganizacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.VehiculoAfectado", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Vehiculos.Vehiculo");

                    b.Property<bool>("Airbag")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("SalidaId")
                        .HasColumnType("int");

                    b.ToTable("Vehiculo", t =>
                        {
                            t.Property("Airbag")
                                .HasColumnName("VehiculoAfectado_Airbag");
                        });

                    b.HasDiscriminator().HasValue(6);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.VehiculoDamnificado", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Vehiculos.Vehiculo");

                    b.Property<bool>("Airbag")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("DamnificadoId")
                        .HasColumnType("int");

                    b.HasIndex("DamnificadoId")
                        .IsUnique();

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("Vista.Data.Models.Vehiculos.Flota.VehiculoSalida", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Vehiculos.Vehiculo");

                    b.Property<int?>("EncargadoId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("ImagenId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroMovil")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasIndex("EncargadoId");

                    b.HasIndex("ImagenId")
                        .IsUnique();
                });

            modelBuilder.Entity("Vista.Data.Models.Vehiculos.Vehiculo_Personal", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Vehiculos.Vehiculo");

                    b.Property<int>("PersonalId")
                        .HasColumnType("int");

                    b.HasIndex("PersonalId");

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("Vista.Data.Models.Personas.Personal.Bombero", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Personas.Personal.Personal");

                    b.Property<int?>("Altura")
                        .HasColumnType("int");

                    b.Property<bool>("Chofer")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Dotacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("EquipoId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Grado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("NumeroLegajo")
                        .HasColumnType("int");

                    b.Property<int?>("Peso")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VencimientoRegistro")
                        .HasColumnType("datetime(6)");

                    b.HasIndex("EquipoId")
                        .IsUnique();

                    b.HasIndex("NumeroLegajo")
                        .IsUnique();

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Vista.Data.Models.Personas.Personal.ComisionDirectiva", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Personas.Personal.Personal");

                    b.Property<string>("Grado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.ToTable("Persona", t =>
                        {
                            t.Property("Grado")
                                .HasColumnName("ComisionDirectiva_Grado");
                        });

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Incendios.IncendioAeronaves", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Incendios.Incendio");

                    b.HasDiscriminator().HasValue(17);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Incendios.IncendioComercio", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Incendios.Incendio");

                    b.Property<string>("TipoLugar")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasDiscriminator().HasValue(7);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Incendios.IncendioEstablecimientoEducativo", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Incendios.Incendio");

                    b.Property<string>("TipoLugar")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.ToTable("Salidas", t =>
                        {
                            t.Property("TipoLugar")
                                .HasColumnName("IncendioEstablecimientoEducativo_TipoLugar");
                        });

                    b.HasDiscriminator().HasValue(8);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Incendios.IncendioEstablecimientoPublico", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Incendios.Incendio");

                    b.Property<string>("TipoLugar")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.ToTable("Salidas", t =>
                        {
                            t.Property("TipoLugar")
                                .HasColumnName("IncendioEstablecimientoPublico_TipoLugar");
                        });

                    b.HasDiscriminator().HasValue(9);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Incendios.IncendioForestal", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Incendios.Incendio");

                    b.Property<string>("TipoLugar")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.ToTable("Salidas", t =>
                        {
                            t.Property("TipoLugar")
                                .HasColumnName("IncendioForestal_TipoLugar");
                        });

                    b.HasDiscriminator().HasValue(10);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Incendios.IncendioHospitalesYClinicas", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Incendios.Incendio");

                    b.Property<string>("TipoLugar")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.ToTable("Salidas", t =>
                        {
                            t.Property("TipoLugar")
                                .HasColumnName("IncendioHospitalesYClinicas_TipoLugar");
                        });

                    b.HasDiscriminator().HasValue(11);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Incendios.IncendioIndustria", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Incendios.Incendio");

                    b.Property<string>("TipoLugar")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.ToTable("Salidas", t =>
                        {
                            t.Property("TipoLugar")
                                .HasColumnName("IncendioIndustria_TipoLugar");
                        });

                    b.HasDiscriminator().HasValue(12);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Incendios.IncendioVivienda", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Incendios.Incendio");

                    b.Property<string>("TipoLugar")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.ToTable("Salidas", t =>
                        {
                            t.Property("TipoLugar")
                                .HasColumnName("IncendioVivienda_TipoLugar");
                        });

                    b.HasDiscriminator().HasValue(13);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.ServicioEspecialColaboraciónFuerzasSeguridad", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Servicios.ServicioEspecial");

                    b.Property<string>("DetallesColaboFuerzasSeguridad")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasDiscriminator().HasValue(23);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Servicios.ServicioEspecialCapacitacion", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Servicios.ServicioEspecial");

                    b.Property<DateTime>("DiaHora")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("NivelDeCapacitacion")
                        .HasColumnType("int");

                    b.Property<string>("NivelDeCapacitacionOtro")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TipoCapacitacion")
                        .HasColumnType("int");

                    b.Property<string>("TipoCapacitacionOtra")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasDiscriminator().HasValue(18);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Servicios.ServicioEspecialColocaciónDriza", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Servicios.ServicioEspecial");

                    b.Property<string>("Detalles")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreEstablecimiento")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TipoLugar")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.ToTable("Salidas", t =>
                        {
                            t.Property("NombreEstablecimiento")
                                .HasColumnName("ServicioEspecialColocaciónDriza_NombreEstablecimiento");

                            t.Property("TipoLugar")
                                .HasColumnName("ServicioEspecialColocaciónDriza_TipoLugar");
                        });

                    b.HasDiscriminator().HasValue(19);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Servicios.ServicioEspecialFalsaAlarma", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Servicios.ServicioEspecial");

                    b.Property<string>("Detalles")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.ToTable("Salidas", t =>
                        {
                            t.Property("Detalles")
                                .HasColumnName("ServicioEspecialFalsaAlarma_Detalles");
                        });

                    b.HasDiscriminator().HasValue(21);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Servicios.ServicioEspecialPrevencion", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Servicios.ServicioEspecial");

                    b.Property<string>("TipoPrevencion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasDiscriminator().HasValue(14);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Servicios.ServicioEspecialRepresentacion", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Servicios.ServicioEspecial");

                    b.Property<string>("TipoRepresentacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Servicios.ServicioEspecialRetiradoDeObito", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Servicios.ServicioEspecial");

                    b.Property<string>("DetallesObito")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasDiscriminator().HasValue(22);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Servicios.ServicioEspecialSuministroAgua", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Servicios.ServicioEspecial");

                    b.Property<string>("DetallesSuministroAgua")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreEstablecimientoSuministroAgua")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasDiscriminator().HasValue(20);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.VehiculoAfectadoAccidente", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Componentes.VehiculoAfectado");

                    b.HasIndex("SalidaId");

                    b.ToTable("Vehiculo", t =>
                        {
                            t.Property("Airbag")
                                .HasColumnName("VehiculoAfectado_Airbag");
                        });

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.VehiculoAfectadoIncendio", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Componentes.VehiculoAfectado");

                    b.HasIndex("SalidaId");

                    b.ToTable("Vehiculo", t =>
                        {
                            t.Property("Airbag")
                                .HasColumnName("VehiculoAfectado_Airbag");
                        });

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Vista.Data.Models.Vehiculos.Flota.Embarcacion", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Vehiculos.Flota.VehiculoSalida");

                    b.HasIndex("NumeroMovil")
                        .IsUnique();

                    b.HasDiscriminator().HasValue(7);
                });

            modelBuilder.Entity("Vista.Data.Models.Vehiculos.Flota.Movil", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Vehiculos.Flota.VehiculoSalida");

                    b.Property<int?>("CantidadLitros")
                        .HasMaxLength(255)
                        .HasColumnType("int");

                    b.Property<int?>("EquipoId")
                        .HasColumnType("int");

                    b.Property<int>("Kilometraje")
                        .HasColumnType("int");

                    b.Property<string>("ModeloBomba")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NumeroChasis")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NumeroMotor")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasIndex("EquipoId")
                        .IsUnique();

                    b.HasIndex("NumeroMovil")
                        .IsUnique();

                    b.HasDiscriminator().HasValue(5);
                });

            modelBuilder.Entity("Vista.Data.Models.Grupos.Brigadas.Bombero_Brigada", b =>
                {
                    b.HasOne("Vista.Data.Models.Grupos.Brigadas.Brigada", "Brigada")
                        .WithMany("Bomberos")
                        .HasForeignKey("BrigadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vista.Data.Models.Personas.Personal.Bombero", "Bombero")
                        .WithMany("Brigadas")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bombero");

                    b.Navigation("Brigada");
                });

            modelBuilder.Entity("Vista.Data.Models.Grupos.Brigadas.Brigada", b =>
                {
                    b.HasOne("Vista.Data.Models.Personas.Personal.Bombero", "Encargado")
                        .WithMany()
                        .HasForeignKey("EncargadoPersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encargado");
                });

            modelBuilder.Entity("Vista.Data.Models.Grupos.Dependencias.Bombero_Dependencia", b =>
                {
                    b.HasOne("Vista.Data.Models.Grupos.Dependencias.Dependencia", "Dependencia")
                        .WithMany("Bomberos")
                        .HasForeignKey("DependenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vista.Data.Models.Personas.Personal.Bombero", "Bombero")
                        .WithMany("Dependencias")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bombero");

                    b.Navigation("Dependencia");
                });

            modelBuilder.Entity("Vista.Data.Models.Grupos.Dependencias.Dependencia", b =>
                {
                    b.HasOne("Vista.Data.Models.Personas.Personal.Bombero", "Encargado")
                        .WithMany()
                        .HasForeignKey("EncargadoPersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encargado");
                });

            modelBuilder.Entity("Vista.Data.Models.Grupos.FuerzasIntervinientes.Salida_FuerzaInterviniente", b =>
                {
                    b.HasOne("Vista.Data.Models.Personas.Damnificado_Salida", "Damnificado")
                        .WithMany()
                        .HasForeignKey("Damnificado_SalidaId");

                    b.HasOne("Vista.Data.Models.Grupos.FuerzasIntervinientes.FuerzaInterviniente", "Fuerza")
                        .WithMany()
                        .HasForeignKey("FuerzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vista.Data.Models.Salidas.Planillas.Salida", "Salida")
                        .WithMany()
                        .HasForeignKey("SalidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vista.Data.Models.Vehiculos.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Damnificado");

                    b.Navigation("Fuerza");

                    b.Navigation("Salida");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("Vista.Data.Models.Objetos.Componentes.MovimientoMaterial", b =>
                {
                    b.HasOne("Vista.Data.Models.Personas.Personal.Bombero", "DestinoBombero")
                        .WithMany("DestinoMaterial")
                        .HasForeignKey("DestinoBomberoPersonaId");

                    b.HasOne("Vista.Data.Models.Vehiculos.Flota.Movil", "DestinoMovil")
                        .WithMany()
                        .HasForeignKey("DestinoMovilVehiculoId");

                    b.HasOne("Vista.Data.Models.Objetos.Material", "Materiales")
                        .WithMany()
                        .HasForeignKey("MaterialesMaterialId");

                    b.Navigation("DestinoBombero");

                    b.Navigation("DestinoMovil");

                    b.Navigation("Materiales");
                });

            modelBuilder.Entity("Vista.Data.Models.Otros.Incidente", b =>
                {
                    b.HasOne("Vista.Data.Models.Personas.Personal.Bombero", "Encargado")
                        .WithMany("Incidentes")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Vista.Data.Models.Vehiculos.Flota.VehiculoSalida", "Vehiculo")
                        .WithMany("Incidentes")
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Encargado");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("Vista.Data.Models.Otros.NovedadBase", b =>
                {
                    b.HasOne("Vista.Data.Models.Personas.Personal.Bombero", "Personal")
                        .WithMany("Novedades")
                        .HasForeignKey("PersonalId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("Vista.Data.Models.Personas.Damnificado_Salida", b =>
                {
                    b.HasOne("Vista.Data.Models.Salidas.Planillas.Salida", "Salida")
                        .WithMany("Damnificados")
                        .HasForeignKey("SalidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salida");
                });

            modelBuilder.Entity("Vista.Data.Models.Personas.Personal.Componentes.AscensoBombero", b =>
                {
                    b.HasOne("Vista.Data.Models.Personas.Personal.Bombero", "PersonalAfectado")
                        .WithMany("Ascensos")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonalAfectado");
                });

            modelBuilder.Entity("Vista.Data.Models.Personas.Personal.Componentes.Contacto", b =>
                {
                    b.HasOne("Vista.Data.Models.Personas.Personal.Personal", "Persona")
                        .WithOne("Contacto")
                        .HasForeignKey("Vista.Data.Models.Personas.Personal.Componentes.Contacto", "PersonalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Vista.Data.Models.Personas.Personal.Componentes.Firma", b =>
                {
                    b.HasOne("Vista.Data.Models.Vehiculos.Flota.Embarcacion", null)
                        .WithMany("Firmas")
                        .HasForeignKey("EmbarcacionVehiculoId");

                    b.HasOne("Vista.Data.Models.Personas.Personal.Bombero", "Bombero")
                        .WithMany("Firmas")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vista.Data.Models.Vehiculos.Flota.Movil", "Movil")
                        .WithMany("Firmas")
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bombero");

                    b.Navigation("Movil");
                });

            modelBuilder.Entity("Vista.Data.Models.Personas.Personal.Componentes.Licencia", b =>
                {
                    b.HasOne("Vista.Data.Models.Personas.Personal.Personal", "PersonalAfectado")
                        .WithMany("Licencias")
                        .HasForeignKey("PersonalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonalAfectado");
                });

            modelBuilder.Entity("Vista.Data.Models.Personas.Personal.Componentes.Sancion", b =>
                {
                    b.HasOne("Vista.Data.Models.Personas.Personal.Bombero", "PersonalSancionado")
                        .WithMany("SancionesRecibidas")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonalSancionado");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.BomberoSalida", b =>
                {
                    b.HasOne("Vista.Data.Models.Vehiculos.Flota.Movil", "MovilAsignado")
                        .WithMany()
                        .HasForeignKey("MovilId");

                    b.HasOne("Vista.Data.Models.Personas.Personal.Bombero", "Bombero")
                        .WithMany("Salidas")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vista.Data.Models.Salidas.Planillas.Salida", "Salida")
                        .WithMany("CuerpoParticipante")
                        .HasForeignKey("SalidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bombero");

                    b.Navigation("MovilAsignado");

                    b.Navigation("Salida");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.Movil_Salida", b =>
                {
                    b.HasOne("Vista.Data.Models.Vehiculos.Flota.Movil", "Movil")
                        .WithMany("Salidas")
                        .HasForeignKey("MovilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vista.Data.Models.Personas.Personal.Bombero", "Chofer")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vista.Data.Models.Salidas.Planillas.Salida", "Salida")
                        .WithMany("Moviles")
                        .HasForeignKey("SalidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chofer");

                    b.Navigation("Movil");

                    b.Navigation("Salida");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Salida", b =>
                {
                    b.HasOne("Vista.Data.Models.Personas.Personal.Bombero", "Encargado")
                        .WithMany()
                        .HasForeignKey("EncargadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vista.Data.Models.Personas.Personal.Bombero", "QuienLleno")
                        .WithMany()
                        .HasForeignKey("QuienLlenoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vista.Data.Models.Salidas.Componentes.SeguroSalida", "Seguro")
                        .WithOne("Salida")
                        .HasForeignKey("Vista.Data.Models.Salidas.Planillas.Salida", "SeguroId");

                    b.Navigation("Encargado");

                    b.Navigation("QuienLleno");

                    b.Navigation("Seguro");
                });

            modelBuilder.Entity("Vista.Data.Models.Vehiculos.Flota.Componentes.Limpieza", b =>
                {
                    b.HasOne("Vista.Data.Models.Personas.Personal.Bombero", "Bomberos")
                        .WithMany("Limpieza")
                        .HasForeignKey("BomberosPersonaId");

                    b.HasOne("Vista.Data.Models.Vehiculos.Flota.Movil", "Movil")
                        .WithMany()
                        .HasForeignKey("MovilId");

                    b.Navigation("Bomberos");

                    b.Navigation("Movil");
                });

            modelBuilder.Entity("Vista.Data.Models.Vehiculos.Flota.EmbarcacionAfectada", b =>
                {
                    b.HasOne("Vista.Data.Models.Salidas.Planillas.Incendios.Incendio", "Incendio")
                        .WithMany()
                        .HasForeignKey("SalidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incendio");
                });

            modelBuilder.Entity("Vista.Data.Models.Vehiculos.Vehiculo", b =>
                {
                    b.HasOne("Vista.Data.Models.Salidas.Componentes.SeguroVehiculo", "Seguro")
                        .WithOne("Vehiculo")
                        .HasForeignKey("Vista.Data.Models.Vehiculos.Vehiculo", "SeguroId");

                    b.Navigation("Seguro");
                });

            modelBuilder.Entity("Vista.Data.Models.Imagenes.Imagen_Personal", b =>
                {
                    b.HasOne("Vista.Data.Models.Personas.Personal.Personal", "Personal")
                        .WithOne("Imagen")
                        .HasForeignKey("Vista.Data.Models.Imagenes.Imagen_Personal", "PersonalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("Vista.Data.Models.Grupos.Dependencias.IncidenteDependencia", b =>
                {
                    b.HasOne("Vista.Data.Models.Grupos.Dependencias.Dependencia", "Dependencia")
                        .WithMany("Incidentes")
                        .HasForeignKey("DependenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dependencia");
                });

            modelBuilder.Entity("Vista.Data.Models.Vehiculos.Flota.Componentes.NovedadVehiculo", b =>
                {
                    b.HasOne("Vista.Data.Models.Vehiculos.Flota.VehiculoSalida", "Vehiculo")
                        .WithMany("Novedades")
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.VehiculoDamnificado", b =>
                {
                    b.HasOne("Vista.Data.Models.Personas.Damnificado_Salida", "Damnificado")
                        .WithOne("VehiculoDamnificado")
                        .HasForeignKey("Vista.Data.Models.Salidas.Componentes.VehiculoDamnificado", "DamnificadoId");

                    b.Navigation("Damnificado");
                });

            modelBuilder.Entity("Vista.Data.Models.Vehiculos.Flota.VehiculoSalida", b =>
                {
                    b.HasOne("Vista.Data.Models.Personas.Personal.Bombero", "Encargado")
                        .WithMany("VehiculosEncargado")
                        .HasForeignKey("EncargadoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Vista.Data.Models.Imagenes.Imagen_VehiculoSalida", "Imagen")
                        .WithOne("Vehiculo")
                        .HasForeignKey("Vista.Data.Models.Vehiculos.Flota.VehiculoSalida", "ImagenId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Encargado");

                    b.Navigation("Imagen");
                });

            modelBuilder.Entity("Vista.Data.Models.Vehiculos.Vehiculo_Personal", b =>
                {
                    b.HasOne("Vista.Data.Models.Personas.Personal.Personal", "Personal")
                        .WithMany("VehiculosPersonales")
                        .HasForeignKey("PersonalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("Vista.Data.Models.Personas.Personal.Bombero", b =>
                {
                    b.HasOne("Vista.Data.Models.Grupos.Dependencias.Comunicaciones.Comunicacion", "Handie")
                        .WithOne("Bombero")
                        .HasForeignKey("Vista.Data.Models.Personas.Personal.Bombero", "EquipoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Handie");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.VehiculoAfectadoAccidente", b =>
                {
                    b.HasOne("Vista.Data.Models.Salidas.Planillas.Accidente", "Accidente")
                        .WithMany("VehiculosAfectado")
                        .HasForeignKey("SalidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accidente");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.VehiculoAfectadoIncendio", b =>
                {
                    b.HasOne("Vista.Data.Models.Salidas.Planillas.Incendios.Incendio", "Incendio")
                        .WithMany("VehiculoAfectados")
                        .HasForeignKey("SalidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incendio");
                });

            modelBuilder.Entity("Vista.Data.Models.Vehiculos.Flota.Movil", b =>
                {
                    b.HasOne("Vista.Data.Models.Grupos.Dependencias.Comunicaciones.Comunicacion", "HandieMovil")
                        .WithOne("Movil")
                        .HasForeignKey("Vista.Data.Models.Vehiculos.Flota.Movil", "EquipoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("HandieMovil");
                });

            modelBuilder.Entity("Vista.Data.Models.Grupos.Brigadas.Brigada", b =>
                {
                    b.Navigation("Bomberos");
                });

            modelBuilder.Entity("Vista.Data.Models.Grupos.Dependencias.Comunicaciones.Comunicacion", b =>
                {
                    b.Navigation("Bombero");

                    b.Navigation("Movil");
                });

            modelBuilder.Entity("Vista.Data.Models.Grupos.Dependencias.Dependencia", b =>
                {
                    b.Navigation("Bomberos");

                    b.Navigation("Incidentes");
                });

            modelBuilder.Entity("Vista.Data.Models.Personas.Damnificado_Salida", b =>
                {
                    b.Navigation("VehiculoDamnificado");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Salida", b =>
                {
                    b.Navigation("CuerpoParticipante");

                    b.Navigation("Damnificados");

                    b.Navigation("Moviles");
                });

            modelBuilder.Entity("Vista.Data.Models.Imagenes.Imagen_VehiculoSalida", b =>
                {
                    b.Navigation("Vehiculo")
                        .IsRequired();
                });

            modelBuilder.Entity("Vista.Data.Models.Personas.Personal.Personal", b =>
                {
                    b.Navigation("Contacto");

                    b.Navigation("Imagen");

                    b.Navigation("Licencias");

                    b.Navigation("VehiculosPersonales");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.SeguroSalida", b =>
                {
                    b.Navigation("Salida")
                        .IsRequired();
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.SeguroVehiculo", b =>
                {
                    b.Navigation("Vehiculo")
                        .IsRequired();
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Accidente", b =>
                {
                    b.Navigation("VehiculosAfectado");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Incendios.Incendio", b =>
                {
                    b.Navigation("VehiculoAfectados");
                });

            modelBuilder.Entity("Vista.Data.Models.Vehiculos.Flota.VehiculoSalida", b =>
                {
                    b.Navigation("Incidentes");

                    b.Navigation("Novedades");
                });

            modelBuilder.Entity("Vista.Data.Models.Personas.Personal.Bombero", b =>
                {
                    b.Navigation("Ascensos");

                    b.Navigation("Brigadas");

                    b.Navigation("Dependencias");

                    b.Navigation("DestinoMaterial");

                    b.Navigation("Firmas");

                    b.Navigation("Incidentes");

                    b.Navigation("Limpieza");

                    b.Navigation("Novedades");

                    b.Navigation("Salidas");

                    b.Navigation("SancionesRecibidas");

                    b.Navigation("VehiculosEncargado");
                });

            modelBuilder.Entity("Vista.Data.Models.Vehiculos.Flota.Embarcacion", b =>
                {
                    b.Navigation("Firmas");
                });

            modelBuilder.Entity("Vista.Data.Models.Vehiculos.Flota.Movil", b =>
                {
                    b.Navigation("Firmas");

                    b.Navigation("Salidas");
                });
#pragma warning restore 612, 618
        }
    }
}

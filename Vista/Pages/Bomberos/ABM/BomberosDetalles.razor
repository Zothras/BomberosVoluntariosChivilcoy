@inject NavigationManager navigationManager
@inject IDbContextFactory<BomberosDbContext> DbFactory
@using Vista.Services
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel
@using AntDesign.TableModels
@using System.Text.Json
@using Vista.Data.Models.Grupos.Brigadas
@using Vista.Data.Models.Personas.Personal
@using Vista.Data.Models.Personas.Personal.Componentes
@using Vista.Data.Models.Imagenes

<style>
    /* Contenedor del contenido del modal */
    .ant-modal-content {
        position: relative;
        background-color: #fff;
        background-clip: padding-box;
        border: 0;
        border-radius: 2px;
        box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05);
        pointer-events: auto;
        border: 1px solid red !important; /* ¡Este estilo modifica el borde del modal! */
    }

    /* Etiquetas del formulario dentro del modal */
    .ant-form-horizontal .ant-form-item-label {
        flex-grow: 1;
        background: #A63333;
    }

        .ant-form-horizontal .ant-form-item-label > label {
            color: #FFFFFF;
            padding: 2px 4px;
        }

    /* Ítems del formulario */
    .ant-form-item {
        box-sizing: border-box;
        margin: 0;
        margin-bottom: 8px !important;
        padding: 0;
        color: rgba(0, 0, 0, 0.85);
        font-size: 14px;
        line-height: 1.5715;
        font-weight: bold;
        vertical-align: top;
    }
</style>

@* Detalles del Bombero *@
<Form Model="@bomberoVM" LabelColSpan="8" WrapperColSpan="16">
    <h2 class="modal-title">Detalles del Bombero</h2>
    <div class="info-section">
        <FormItem Label="Nombre">@bomberoVM.Nombre</FormItem>
        <FormItem Label="Apellido">@bomberoVM.Apellido</FormItem>
        <FormItem Label="Dirección">@bomberoVM.Direccion</FormItem>
        <FormItem Label="Fecha De Nacimiento">@bomberoVM.FechaNacimiento</FormItem>
        <FormItem Label="Numero De Legajo">@bomberoVM.NumeroLegajo</FormItem>
        <FormItem Label="Grado">@bomberoVM.Grado</FormItem>
        <FormItem Label="Dotación">@bomberoVM.Dotacion</FormItem>
        <FormItem Label="Chofer">
            @if (bomberoVM.Chofer)
            {
                <span>Es Chofer</span>
                <br />
                <span>Vencimiento Registro: @bomberoVM.VencimientoRegistro</span>
            }
            else
            {
                <span>No es Chofer</span>
            }
        </FormItem>
        <FormItem Label="Sexo">@bomberoVM.Sexo</FormItem>
        <FormItem Label="Lugar de Nacimiento">@bomberoVM.LugarNacimiento</FormItem>
        <FormItem Label="Documento">@bomberoVM.Documento</FormItem>
        <FormItem Label="Grupo Sanguíneo">@bomberoVM.GrupoSanguineo.GetDisplayName()</FormItem>
        <FormItem Label="Altura">@bomberoVM.Altura cm</FormItem>
        <FormItem Label="Peso">@bomberoVM.Peso kg</FormItem>
        <FormItem Label="Profesión">@bomberoVM.Profesion</FormItem>
        <FormItem Label="Observaciones">@bomberoVM.Observaciones</FormItem>
        <FormItem Label="Nivel de Estudios">@bomberoVM.NivelEstudios</FormItem>
        <FormItem Label="Número de Ioma">@bomberoVM.NumeroIoma</FormItem>
    </div>

    <h3 class="section-title">Información de Contacto</h3>
    <div class="info-section">
        <FormItem Label="Teléfono Cel">@contactoVM.TelefonoCel</FormItem>
        <FormItem Label="Teléfono Laboral">@contactoVM.TelefonoLaboral</FormItem>
        <FormItem Label="Teléfono Fijo">@contactoVM.TelefonoFijo</FormItem>
        <FormItem Label="Email">@contactoVM.Email</FormItem>
    </div>

    <h3 class="section-title">Información de Brigada</h3>
    <div class="info-section">
        <FormItem Label="Nombre de Brigada">@brigadaVM?.NombreBrigada</FormItem>
    </div>
</Form>

@code {
    [Parameter] public int BomberoId { get; set; }
    BomberosDbContext? Context { get; set; }
    public Bombero bomberoVM { get; set; } = new();
    public Contacto contactoVM { get; set; } = new();
    public Brigada brigadaVM { get; set; } = new();

    //Carga de imagen
    public string CargarImage
    {
        get
        {
            using var context = DbFactory.CreateDbContext();

            string src = "/";

            var imagen = context.ImagenesBomberos
                                .SingleOrDefault(i => i.ImagenId == bomberoVM.Imagen.ImagenId);

            if (imagen is not null)
            {
                src = $"data:{imagen.TipoImagen};base64,{imagen.Base64Imagen}";
            }

            return src;
        }
    }

    // Init
    protected override async Task OnInitializedAsync()
    {
        Context = DbFactory.CreateDbContext();
        bomberoVM = await Context.Bomberos.Where(b => b.PersonaId == BomberoId).SingleOrDefaultAsync();
        contactoVM = await Context.Contactos.Where(c => c.PersonalId == BomberoId).SingleOrDefaultAsync();

        StateHasChanged();
    }

}